- content_for :page_title do
  = @page_title

- content_for :stylesheets do
  = stylesheet_link_tag "application", media: "all"

- content_for :javascripts do
  = javascript_include_tag "application"

- content_for :content_override do
  main#wrapper(role="main")
    .phase-banner
      / p.phase-tag = config_item(:phase).upcase )(this line is kept incase the moj elements change and this line needs to be reinstated!)
      span This is a new service - Your&nbsp;
      - if ! user_signed_in?
        <a href="mailto:PQFeedback@digital.justice.gov.uk?Subject=PQ%20Feedback">feedback</a>&nbsp;
      - else
        <a href="mailto:PQFeedback@digital.justice.gov.uk?Subject=PQ%20Tracker">feedback</a>&nbsp;
      | will help us to improve it.

    - if HostEnv.is_staging?
      .staging_banner
        | This is not the live Parliamentary Questions Tracker environment

    #content
      = render partial: "shared/navigation"
      .container
        .content-inner
          = yield

- content_for :footer_support_links do
  li
    = link_to "Contact Parliamentary Branch", "mailto:pqs@justice.gsi.gov.uk?Subject=PQ%20Tracker"

- content_for :body_end

  script type="text/javascript" GOVUK.stickAtTopWhenScrolling.init();
  script type="text/javascript" GOVUK.stopScrollingAtFooter.addEl($(footer), $(footer).height());

  javascript:
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    ga('create', '#{Settings.ga_tracker_id}', 'auto');
    ga('send', 'pageview');


  //javascript:

    $(".counter").hide();

    var countChecked = function () {
      var n = $("input:checked").length;
      $("div.counter").text(n + (n === 1 ? " question" : " questions") + " selected");
    };
    countChecked();
    $("input[type=checkbox]").on("click", countChecked);


    $( "input[type=checkbox]" ).on( "click", function() {
      var chosen_questions = [];
      $("input:checkbox:checked").map(function () {
        chosen_questions.push($(this).val());
      });
      console.log(chosen_questions);
    });

    $("input.quick_action").click(function (event) {
      event.preventDefault();
      $(".counter").toggle();
    });

  javascript:

    var getOptionAttribute = function (option) {
      var toAttribute = option.replace(/\s+/g, '_').toLowerCase();
      return toAttribute;
    }

    $(document).ready(function () {

      var in_progress_status = [];
      var in_progress_question_type = [];

      // Get distinct status' from rendered page.
      $('div.col-md-2').find('span.flag').each(function () {
        var questionStatus = ($.trim($(this).text()));
        //console.log("Statuses found: " + questionStatus);
        if ($.inArray(questionStatus, in_progress_status) == -1) {
          in_progress_status.push(questionStatus);
        }
      });
      //console.log("Status' in array: " + in_progress_status);

      // Get distinct question types from rendered page.
      $('div.pq-header-flags').find('span.question-type').each(function () {
        var questionType = ($.trim($(this).text()));
        //console.log(questionType);
        if ($.inArray(questionType, in_progress_question_type) == -1) {
          in_progress_question_type.push(questionType);
        }
      });
      //console.log("Question types in array: " + in_progress_question_type);

      // Populate the 'Status' filter.
      $("#status-list").html(in_progress_status.map(function (value) {
        var attribute = getOptionAttribute(value);
        return(
          '<label for="status-'
          + attribute +
          '"><input name="'
          + attribute +
          '[]" value="'
          + attribute +
          '" id="status-'
          + attribute +
          '" type="checkbox">'
          + value +
          '</label>'
        );
      }).join(""));

      // Populate the 'Question type' filter.
      $("#question-type-list").html(in_progress_question_type.map(function (value) {
        var attribute = getOptionAttribute(value);
        return (
          '<label for="status-'
          + attribute +
          '"><input name="'
          + attribute +
          '[]" value="'
          + attribute +
          '" id="status-'
          + attribute +
          '" type="checkbox">'
          + value +
          '</label>'
        );
      }).join(""));

    });


= render template: "layouts/moj_template"
